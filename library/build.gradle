apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 31
        versionCode 2
        versionName "0.2.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.1.0'
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

task generateJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task generateJavadocsJar(type: Jar, dependsOn: generateJavadocs) {
    from generateJavadocs.destinationDir
    classifier 'javadoc'
}

artifacts {
    archives generateJavadocsJar
    archives generateSourcesJar
}


ext {
    publishedGroupId = 'com.leavjenn.smoothdaterangepicker'
    libraryName = 'SmoothDateRangePicker'
    artifact = 'smoothdaterangepicker'

    libraryDescription = 'An Android date range picker widget based on stock material design date picker'

    siteUrl = 'https://github.com/leavjenn/SmoothDateRangePicker'
    gitUrl = 'https://github.com/leavjenn/SmoothDateRangePicker.git'

    libraryVersion = '0.2.0'

    developerId = 'leavjenn'
    developerName = 'Leav Jenn'
    developerEmail = 'leavjenn@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

//install {
//    repositories.mavenInstaller {
//        // This generates POM.xml with proper parameters
//        pom {
//            project {
//                packaging 'aar'
//                groupId publishedGroupId
//                artifactId artifact
//
//                name libraryName
//                description libraryDescription
//                url siteUrl
//
//                licenses {
//                    license {
//                        name licenseName
//                        url licenseUrl
//                    }
//                }
//                developers {
//                    developer {
//                        id developerId
//                        name developerName
//                        email developerEmail
//                    }
//                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//                }
//            }
//        }
//    }
//}

// bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = libraryName
        desc = libraryDescription
        vcsUrl = gitUrl
        websiteUrl = siteUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            name = libraryVersion
            desc = libraryDescription
        }
    }
}